'use client';

import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { ProcessingResult as ProcessingResultType } from '@/types';

interface ProcessingResultProps {
  result: ProcessingResultType | null;
  processing?: boolean;
}

export const ProcessingResult = ({ result, processing }: ProcessingResultProps) => {
  if (processing) {
    return (
      <Card>
        <CardHeader>
          <CardTitle>Generating Image</CardTitle>
          <CardDescription>Your prompt is being processed to generate an image...</CardDescription>
        </CardHeader>
        <CardContent className="flex flex-col items-center justify-center py-12">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-gray-900 mb-4"></div>
          <p>Generating your image...</p>
        </CardContent>
      </Card>
    );
  }

  if (!result) {
    return (
      <Card>
        <CardHeader>
          <CardTitle>Image Result</CardTitle>
          <CardDescription>Results will appear here after you submit a prompt</CardDescription>
        </CardHeader>
        <CardContent className="flex flex-col items-center justify-center py-12 text-gray-500">
          <svg 
            className="w-16 h-16 mb-4" 
            fill="none" 
            stroke="currentColor" 
            viewBox="0 0 24 24" 
            xmlns="http://www.w3.org/2000/svg"
          >
            <path 
              strokeLinecap="round" 
              strokeLinejoin="round" 
              strokeWidth="2" 
              d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
            ></path>
          </svg>
          <p>Submit a prompt to generate an image</p>
        </CardContent>
      </Card>
    );
  }

  if (result.status === 'error') {
    return (
      <Card className="border-red-500">
        <CardHeader>
          <CardTitle className="text-red-600">Error</CardTitle>
          <CardDescription>Error occurred during processing</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="p-4 bg-red-50 rounded-lg">
            <p className="text-red-700">{result.errorMessage || 'An unknown error occurred'}</p>
          </div>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle>Generated Image</CardTitle>
        <CardDescription>Created from your prompt</CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        {/* Display the generated image if available - now shown first */}
        {result.generatedImage && (
          <div>
            <h3 className="font-medium text-gray-900 mb-1">Generated Image:</h3>
            <img 
              src={`data:image/png;base64,${result.generatedImage}`} 
              alt="Generated by AI" 
              className="max-h-64 rounded-md object-contain border"
            />
          </div>
        )}
        
        <div>
          <h3 className="font-medium text-gray-900 mb-1">Input Prompt:</h3>
          <p className="text-gray-700 bg-gray-50 p-3 rounded-md">{result.inputPrompt}</p>
        </div>
        
        <div>
          <h3 className="font-medium text-gray-900 mb-1">Generated Text:</h3>
          <p className="text-gray-700 bg-gray-50 p-3 rounded-md">{result.outputPrompt}</p>
        </div>
      </CardContent>
      <CardFooter className="text-sm text-gray-500">
        Processed in {result.processingTime}ms
      </CardFooter>
    </Card>
  );
};